= render 'guides/breadcrumb'

.dashboard
  .mui-row
    .mui-col-md-12.mui--text-right.menu.slide--menu
      = button_link_to edit_guide_path(@guide), class: 'mui-btn--small' do
        %i.fa.fa-gears.settings
        Adjust Settings
      = button_link_to guide_languages_path(@guide), class: 'mui-btn--small' do
        %i.fa.fa-language.languages
        Add Languages
      = button_link_to invite_guide_path(@guide), class: 'mui-btn--small' do
        %i.fa.fa-user-plus.users
        Invite Collaborators
  .mui-row{ style: 'margin-top: 0px' }
    .mui-col-md-12.mui--text-right.menu.slide--menu
      = button_link_to preview_guide_path(@guide), class: 'mui-btn--small', target: '_blank', btn: :primary do
        %strong
          %i.fa-newspaper-o.fa
          Preview
      = form_tag publish_guide_path(@guide) do
        %button.mui-btn--small.mui-btn--primary.mui-btn{ disabled: @guide.is_publishing? || @guide.is_synced? }
          %strong
            - if @guide.is_publishing?
              %i.fa-cloud-upload.fa.fa-pulse
              Publishing...
            - else
              %i.fa-cloud-upload.fa
              Publish
      - if @guide.is_published?
        = button_link_to @guide.published_resource, class: 'mui-btn--small', target: '_blank', btn: :primary, disabled: !@guide.is_synced? do
          %strong
            %i.fa-file-pdf-o.fa
            Download
          - if @guide.is_synced?
            Current Version
          - else
            Old Version
      - elsif @guide.is_failed?
        %button.mui-btn--small.mui-btn--danger.mui-btn{ disabled: true }
          %strong
            %i.fa-exclamation-triangle.fa
            Publishing Failed

    .mui-col-md-12
      %h2 Get Started on Your Voter Guide
    .mui-col-md-6
      %p Create your Voter Guide by editing the following sections.

  .mui-row
    .mui-col-md-4.box
      %h3
        - if @guide.fields.map(&:value).reject(&:nil?).count == @guide.template.fields.count
          %i.fa.fa-check-circle-o
        Fields
      %h1.big
        %span{ class: @guide.fields.map(&:value).reject(&:nil?).count == @guide.template.fields.count ? 'mui--text-dark-hint' : 'mui--text-dark'  }= @guide.fields.map(&:value).reject(&:nil?).count
        %span.mui--text-dark-hint /
        %span.mui--text-dark-hint= @guide.template.fields.count
      %span.small
        - if @guide.fields.map(&:value).reject(&:nil?).count == @guide.template.fields.count
          all good!
        - else
          fields to complete
      = button_link_to fields_guide_path(@guide) do
        %i.fa.fa-map-signs
        Edit Fields
      %p
        %em Edit the descriptive fields that will explain how to vote and what your guide is all about.

    .mui-col-md-4.box
      %h3
        - unless @guide.is_there_space?(contests: 1)
          %i.fa.fa-check-circle-o
        Contests
      %h1.big
        %span{ class: @guide.is_there_space?(contests: 1) ? 'mui--text-dark' : 'mui--text-dark-hint'  }= @guide.pages_for(:contests)
        %span.mui--text-dark-hint /
        %span.mui--text-dark-hint= @guide.template.available_pages
      %span.small pages
      = button_link_to guide_contests_path(@guide) do
        %i.fa.fa-users
        Edit Contests
      %p
        %em Manage the candidates that are running for office and the questions they've answered.

    .mui-col-md-4.box
      %h3
        - unless @guide.is_there_space?(measures: 1)
          %i.fa.fa-check-circle-o
        Ballot Measures
      %h1.big
        %span{ class: @guide.is_there_space?(measures: 1) ? 'mui--text-dark' : 'mui--text-dark-hint'  }= @guide.pages_for(:measures)
        %span.mui--text-dark-hint /
        %span.mui--text-dark-hint= @guide.template.available_pages
      %span.small pages
      = button_link_to guide_measures_path(@guide) do
        %i.fa.fa-file-text
        Edit Ballot Measures
      %p
        %em List the ballot measures that voters will get to decide on election day.

- if @guide.is_publishing?
  :javascript
    var decay = 0
    function check_if_published() {
      decay += 1
      superagent.get(document.location.pathname)
                .send()
                .set('X-CSRF-Token', CSRF.token())
                .set('Accept', 'application/json')
                .end(function(err, resp) {
                  if( resp.body.publishing ) setTimeout(check_if_published, 50 * Math.pow(10, decay))
                  else document.location.reload()
                })

      }
    setTimeout(check_if_published, 500)
